apply plugin: 'com.android.application'

def buildFirebase = project.hasProperty('buildFirebase')

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 29
        vectorDrawables.useSupportLibrary = true
    }

    externalNativeBuild {
//        cmake {
//            version "3.10.2"
//            path "C:\\Users\\angai\\AndroidStudioProjects\\ring-project\\client-android\\ring-android\\app\\src\\main\\cpp\\daemon\\CMakeLists.txt"
//        }
    }

    sourceSets {
        main {
            aidl.srcDirs = ['src/main/java']
            jniLibs.srcDir 'src/main/cpp'
//            jniLibs.srcDir 'src/main/cpp/bin/jni'
            jni.srcDirs = []
        }

        // Move the tests to tests/java, tests/res, etc...
//        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "push"
    productFlavors {
        noPush {
            dimension "push"
        }
        withFirebase {
            dimension "push"
        }
    }
    signingConfigs {
        config {
            keyAlias 'ring'
            storeFile file('../keystore.bin')
        }
    }
    lintOptions {
        disable 'MissingTranslation'
    }
    splits {
        abi {
            enable true
            reset()
            def sp = archs.split(',')
            include(sp)
            universalApk true
        }
    }
}

dependencies {
//    def android_support_version = "27.0.2"
    def butterknife_version = "10.0.0"
    def dagger_version = "2.12"

    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':libringclient')


    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


//    implementation 'com.android.support:design:27.1.1'
//    implementation "com.android.support:support-v13:$android_support_version"
//    implementation "com.android.support:design:$android_support_version"
//    implementation "com.android.support:cardview-v7:$android_support_version"
//    implementation "com.android.support:preference-v14:$android_support_version"
//    implementation "com.android.support:recyclerview-v7:$android_support_version"
//    implementation "com.android.support:appcompat-v7:$android_support_version"
//    implementation "com.android.support:leanback-v17:27.0.2"
//    implementation "com.android.support:preference-leanback-v17:27.0.2"


    // https://mvnrepository.com/artifact/com.googlecode.ez-vcard/ez-vcard
    implementation group: 'com.googlecode.ez-vcard', name: 'ez-vcard', version: '0.10.2'


    def leanback_version = "1.0.0"

    implementation "androidx.leanback:leanback:$leanback_version"

    // leanback-preference is an add-on that provides a settings UI for TV apps.
    implementation "androidx.leanback:leanback-preference:$leanback_version"
//
//    // ORM
    implementation 'com.j256.ormlite:ormlite-android:4.48'

    // Barcode scanning
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0@aar'

    // Butterknife
    implementation "com.jakewharton:butterknife:$butterknife_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"

    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'

    // Dagger dependency injection
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:3.8.0'

    // RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    withFirebaseImplementation 'com.google.firebase:firebase-messaging:11.8.0'
}

if (buildFirebase) {
    println 'apply plugin ' + buildFirebase
    apply plugin: 'com.google.gms.google-services'
}